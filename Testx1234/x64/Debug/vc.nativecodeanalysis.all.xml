<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>gMatch.cpp</FILENAME>
      <LINE>6</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'gMatch::matchID' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>gMatch::{ctor}</FUNCTION>
    <DECORATED>??0gMatch@@QEAA@XZ</DECORATED>
    <FUNCLINE>6</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>gMatch::matchID</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LAnim.cpp</FILENAME>
      <LINE>5</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'LAnim::cropPosX' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>LAnim::{ctor}</FUNCTION>
    <DECORATED>??0LAnim@@QEAA@XZ</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>LAnim::cropPosX</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LAnim.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LAnim::loadAnim</FUNCTION>
    <DECORATED>?loadAnim@LAnim@@QEAA_NPEAUSDL_Renderer@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LAnim.cpp</FILENAME>
      <LINE>40</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LAnim::loadAnim</FUNCTION>
    <DECORATED>?loadAnim@LAnim@@QEAA_NPEAUSDL_Renderer@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LAnim.cpp</FILENAME>
      <LINE>42</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LAnim::loadAnim</FUNCTION>
    <DECORATED>?loadAnim@LAnim@@QEAA_NPEAUSDL_Renderer@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@Z</DECORATED>
    <FUNCLINE>22</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LCrypto.cpp</FILENAME>
      <LINE>46</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LCrypto::{ctor}</FUNCTION>
    <DECORATED>??0LCrypto@@QEAA@XZ</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LCrypto.cpp</FILENAME>
      <LINE>46</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LCrypto::{ctor}</FUNCTION>
    <DECORATED>??0LCrypto@@QEAA@XZ</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LCrypto.cpp</FILENAME>
      <LINE>161</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LCrypto::getDataBlock</FUNCTION>
    <DECORATED>?getDataBlock@LCrypto@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@@Z</DECORATED>
    <FUNCLINE>158</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LCrypto.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LCrypto::getDataBlock</FUNCTION>
    <DECORATED>?getDataBlock@LCrypto@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@@Z</DECORATED>
    <FUNCLINE>158</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LCrypto.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LCrypto::getDataBlock</FUNCTION>
    <DECORATED>?getDataBlock@LCrypto@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@@Z</DECORATED>
    <FUNCLINE>158</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LCrypto.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LCrypto::getDataBlock</FUNCTION>
    <DECORATED>?getDataBlock@LCrypto@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@@Z</DECORATED>
    <FUNCLINE>158</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LProjectile.cpp</FILENAME>
      <LINE>4</LINE>
      <COLUMN>13</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'LProjectile::DISTANCE' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>LProjectile::{ctor}</FUNCTION>
    <DECORATED>??0LProjectile@@QEAA@XZ</DECORATED>
    <FUNCLINE>4</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>LProjectile::DISTANCE</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LWindow.cpp</FILENAME>
      <LINE>5</LINE>
      <COLUMN>9</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'LWindow::mWindow' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>LWindow::{ctor}</FUNCTION>
    <DECORATED>??0LWindow@@QEAA@HH@Z</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>LWindow::mWindow</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>Testx1234.cpp</FILENAME>
      <LINE>52</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'engineParameters::GAMESYSTEM::e' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>engineParameters::GAMESYSTEM::{ctor}</FUNCTION>
    <DECORATED>??0GAMESYSTEM@engineParameters@@QEAA@XZ</DECORATED>
    <FUNCLINE>52</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>engineParameters::GAMESYSTEM::e</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>Testx1234.cpp</FILENAME>
      <LINE>99</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'engineParameters::TEMPORAL::projectileX' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>engineParameters::TEMPORAL::{ctor}</FUNCTION>
    <DECORATED>??0TEMPORAL@engineParameters@@QEAA@XZ</DECORATED>
    <FUNCLINE>99</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>engineParameters::TEMPORAL::projectileX</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>Testx1234.cpp</FILENAME>
      <LINE>118</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'MEMEORY::FONT::fpsColor' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>MEMEORY::FONT::{ctor}</FUNCTION>
    <DECORATED>??0FONT@MEMEORY@@QEAA@XZ</DECORATED>
    <FUNCLINE>118</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>MEMEORY::FONT::fpsColor</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>Testx1234.cpp</FILENAME>
      <LINE>134</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'MAPLIST::MAP_SIZE' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>MAPLIST::{ctor}</FUNCTION>
    <DECORATED>??0MAPLIST@@QEAA@XZ</DECORATED>
    <FUNCLINE>134</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>MAPLIST::MAP_SIZE</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>Testx1234.cpp</FILENAME>
      <LINE>637</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>getFinalData</FUNCTION>
    <DECORATED>?getFinalData@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z</DECORATED>
    <FUNCLINE>634</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>Testx1234.cpp</FILENAME>
      <LINE>638</LINE>
      <COLUMN>23</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>getFinalData</FUNCTION>
    <DECORATED>?getFinalData@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z</DECORATED>
    <FUNCLINE>634</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>Testx1234.cpp</FILENAME>
      <LINE>638</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>getFinalData</FUNCTION>
    <DECORATED>?getFinalData@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z</DECORATED>
    <FUNCLINE>634</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>Testx1234.cpp</FILENAME>
      <LINE>638</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>getFinalData</FUNCTION>
    <DECORATED>?getFinalData@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@Z</DECORATED>
    <FUNCLINE>634</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>