<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LCrypto.cpp</FILENAME>
      <LINE>46</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LCrypto::{ctor}</FUNCTION>
    <DECORATED>??0LCrypto@@QEAA@XZ</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LCrypto.cpp</FILENAME>
      <LINE>46</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LCrypto::{ctor}</FUNCTION>
    <DECORATED>??0LCrypto@@QEAA@XZ</DECORATED>
    <FUNCLINE>5</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LCrypto.cpp</FILENAME>
      <LINE>161</LINE>
      <COLUMN>27</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LCrypto::getDataBlock</FUNCTION>
    <DECORATED>?getDataBlock@LCrypto@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@@Z</DECORATED>
    <FUNCLINE>158</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LCrypto.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LCrypto::getDataBlock</FUNCTION>
    <DECORATED>?getDataBlock@LCrypto@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@@Z</DECORATED>
    <FUNCLINE>158</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LCrypto.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LCrypto::getDataBlock</FUNCTION>
    <DECORATED>?getDataBlock@LCrypto@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@@Z</DECORATED>
    <FUNCLINE>158</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\mariu\source\repos\-SERVER-Wizard\Testx1234\</FILEPATH>
      <FILENAME>LCrypto.cpp</FILENAME>
      <LINE>162</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>LCrypto::getDataBlock</FUNCTION>
    <DECORATED>?getDataBlock@LCrypto@@QEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV23@@Z</DECORATED>
    <FUNCLINE>158</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>